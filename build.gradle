plugins {
    id 'fabric-loom' version '1.7.4'
    id 'io.freefair.lombok' version '8.10'
    id 'com.modrinth.minotaur' version '2.+'
}

version = mod_version
group = maven_group

base {
    archivesName = mod_name
}

repositories {
    maven {
        name = 'Shedaniel Maven'
        url = 'https://maven.shedaniel.me'
    }
    maven {
        name = 'Terraformers'
        url = 'https://maven.terraformersmc.com'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modImplementation "me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}"
    modImplementation "com.terraformersmc:modmenu:${modmenu_version}"
    modImplementation "net.kyori:adventure-platform-fabric:${adventure_version}"

    include "net.kyori:adventure-platform-fabric:${adventure_version}"
}

processResources {
    inputs.property 'version', mod_version
    inputs.property 'minecraft_version', minecraft_version
    inputs.property 'loader_version', loader_version
    filteringCharset 'UTF-8'

    filesMatching('fabric.mod.json') {
        expand 'id': mod_name,
                'version': mod_version,
                'minecraft_version': minecraft_version,
                'loader_version': loader_version,
                'cloth_config_version': cloth_config_version,
                'modmenu_version': modmenu_version,
                'fabric_version': fabric_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

modrinth {
    token = System.getenv 'MODRINTH_TOKEN'
    projectId = mod_name
    versionNumber = mod_version
    versionType = 'release'
    uploadFile = remapJar
    gameVersions = [minecraft_version]
    syncBodyFrom = rootProject.file('README.md').text
    dependencies {
        required.version 'fabric-api', fabric_version
        required.version 'cloth-config', "$cloth_config_version+fabric"
        optional.version 'modmenu', modmenu_version
    }
}
